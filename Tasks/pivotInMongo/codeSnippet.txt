        // Combine groupFields and pivotFields
        List<String> allGroupFields = Stream.concat(groupFields.stream(), pivotFields.stream())
                                            .collect(Collectors.toList());

        // Construct the _id for $group
        Fields groupIdFields = Fields.from(
            allGroupFields.stream()
                .map(field -> Fields.field(field.replace(".", "_"), "$" + field))
                .toArray(Fields.Field[]::new)
        );

        // Create GroupOperation
        GroupOperation groupOperation = Aggregation.group(groupIdFields);

        // Add sum operations for valueFields
        for (String valueField : valueFields) {
            groupOperation = groupOperation.sum(valueField).as("sum_" + valueField);
        }


// Combine groupFields and pivotFields
        List<String> allGroupFields = Stream.concat(groupFields.stream(), pivotFields.stream())
                                            .collect(Collectors.toList());

        // Build the dynamic _id for $group using field names
        GroupOperation groupOperation = Aggregation.group(
            allGroupFields.stream()
                .map(field -> field.replace(".", "_")) // Sanitize field names
                .toArray(String[]::new)
        );

        // Add sum operations for valueFields
        for (String valueField : valueFields) {
            groupOperation = groupOperation.sum(valueField).as("sum_" + valueField);
        }



// Start by combining groupFields and pivotFields
Fields groupIdFields = Fields.from(
    Stream.concat(
        groupFields.stream().map(field -> Fields.field(field, "$" + field)), // Group fields
        pivotFields.stream().map(field -> Fields.field(field, "$" + field))  // Pivot fields
    ).toArray(Fields.Field[]::new) // Maintain correct order
);
